# TODO

require 'bundler'
Bundler.setup

require 'rake'
require 'couchrest'
require 'rack/mime'
require 'active_support/json'
require 'active_support/core_ext/hash'
require 'yajl/http_stream'

require 'pp'

# Store connection to CouchDB in this constant
#
Database = CouchRest.database!('http://127.0.0.1:4000/lec')

desc "Upload application TODO:assets & views"
task :default => [:assets] do
  puts "-"*80
  puts "Uploaded application assets into database, please check:",
  " * TODO: http://localhost:4000/lec/_design/_show/1 ???"
  puts "Relevant code is in the _design/lec folder", ""
end

desc "Upload database shows, views, lists from _design/templates"
task :shows do
  require 'couch_docs'

  dir = CouchDocs::DesignDirectory.new('_design/templates')

  # konwertujemy katalog na argument dla *save_doc*
  doc = dir.to_hash
  #p doc

  doc.update '_id' => '_design/lec', 'language' => 'javascript'

  p Database.get('_design/lec')
  
  rev = Database.get('_design/lec')['_rev'] rescue nil
  doc.update( {'_rev' => rev} ) if rev
  p doc['shows'].keys
  #p doc['shows']
  response = Database.save_doc(doc)
  p response
end

desc "Upload assets from _design/lec"
task :assets do
  assets_folder = Pathname.new('_design/lec')

  doc = {
    '_id'   => '_design/lec',
    '_attachments' => {},
  }

  puts "* Reading assets in '#{assets_folder}':"
  FileList.new("#{assets_folder}/**/*.*").each do |source|
     attachment = source.gsub(Regexp.new("^#{assets_folder}/(.*)$"), '\1')
     puts "  - #{attachment}"
     doc['_attachments'][attachment] = {
       'content_type' => Rack::Mime.mime_type( File.extname(assets_folder.join(attachment)) ),
       'data' => File.read(assets_folder.join(attachment))
     }
  end

  rev = Database.get('_design/lec')['_rev'] rescue nil
  doc.update( {'_rev' => rev} ) if rev

  p doc['_attachments'].keys
  Database.save_doc(doc)
end
